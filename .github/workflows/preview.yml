name: Preview Deployment Pipeline

on:
  push:
    branches:
      - testing

env:
  DATABASE_PRISMA_DATABASE_URL: ${{ secrets.TESTING_DATABASE_URL }}
  TESTING_DATABASE_URL: ${{ secrets.TESTING_DATABASE_URL }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Deploy Prisma Migrations
        run: npx prisma migrate deploy

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Build Next.js App
        run: npm run build

      # Start dev server in background for integration tests
      - name: Start Dev Server
        run: |
          npm run dev &
          echo $! > server.pid

      - name: Wait for Dev Server
        run: npx wait-on http://localhost:3000

      - name: Run Unit Tests
        run: npm run test:unit

      - name: Run Integration Tests
        run: npm run test:integration

      - name: Stop Dev Server
        if: always()
        run: kill $(cat server.pid)

  deploy-preview:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Deploy Prisma Migrations to Testing
        env:
          DATABASE_PRISMA_DATABASE_URL: ${{ secrets.TESTING_DATABASE_URL }}
        run: npx prisma migrate deploy

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy Preview to Vercel
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          DATABASE_PRISMA_DATABASE_URL: ${{ secrets.TESTING_DATABASE_URL }}
        run: vercel --token=${{ secrets.VERCEL_TOKEN }} --yes
