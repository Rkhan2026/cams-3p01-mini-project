name: Preview Deployment Pipeline

on:
  push:
    branches:
      - testing # or any branch you use for staging

# For Preview deploys: force Prisma CLI and runtime to use the TEST DB URL.
# DATABASE_PRISMA_DATABASE_URL is set to the testing DB so Prisma CLI commands (migrate, generate) use it automatically.
# TESTING_DATABASE_URL is also exposed so we can verify they match in a guard step.
env:
  DATABASE_PRISMA_DATABASE_URL: ${{ secrets.TESTING_DATABASE_URL }}
  TESTING_DATABASE_URL: ${{ secrets.TESTING_DATABASE_URL }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      # Apply Prisma migrations before build
      - name: Deploy Prisma Migrations
        run: npx prisma migrate deploy

      # Generate Prisma client to ensure Next.js build can use it
      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Build Next.js App
        run: npm run build

      - name: Run Unit Tests
        run: npm run test:unit

      - name: Run Integration Tests
        run: npm run test:integration

  deploy-preview:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Generate Prisma Client
        run: npx prisma generate

      # Ensure DB schema is up to date before deploying
      - name: Deploy Prisma Migrations to Testing
        env:
          DATABASE_PRISMA_DATABASE_URL: ${{ secrets.TESTING_DATABASE_URL }}
        run: npx prisma migrate deploy

      - name: Install Vercel CLI
        run: npm install -g vercel

      # Pass DB env during deploy to ensure preview connects to testing DB
      - name: Deploy Preview to Vercel
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          DATABASE_PRISMA_DATABASE_URL: ${{ secrets.TESTING_DATABASE_URL }}
        run: vercel --token=${{ secrets.VERCEL_TOKEN }} --yes
