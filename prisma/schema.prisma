generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_PRISMA_DATABASE_URL")
}

/// Student entity (no global User)
model Student {
  id              String        @id @default(cuid()) @map("Student_ID")
  name            String        @map("Name")
  facultyNo       String?       @map("Faculty_No")
  enrollmentNo    String?       @map("Enrollment_No")
  email           String        @unique @map("Email")
  passwordHash    String        @map("Password")
  academicRecords Json?         @map("Academic_Records")
  accountStatus   String        @default("PENDING_STUDENT") @map("Account_Status")
  applications    Application[]
}

/// Company Recruiter entity
model CompanyRecruiter {
  id             String       @id @default(cuid()) @map("Recruiter_ID")
  name           String       @map("Name")
  email          String       @unique @map("Email")
  passwordHash   String       @map("Password")
  companyProfile String?      @map("Company_Profile")
  accountStatus  String       @default("PENDING_RECRUITER") @map("Account_Status")
  jobPostings    JobPosting[]
}

/// Training and Placement Officer entity
model TpoAdmin {
  id           String @id @default(cuid()) @map("TPO_ID")
  name         String @map("Name")
  email        String @unique @map("Email")
  passwordHash String @map("Password")
  role         String @default("TPO_ADMIN") @map("Role")
}

model JobPosting {
  id                  String           @id @default(cuid()) @map("Job_ID")
  recruiterId         String           @map("Recruiter_ID")
  eligibilityCriteria String?          @map("Eligibility_Criteria")
  jobDescription      String           @map("Job_Description")
  applicationDeadline DateTime         @map("Application_Deadline")
  approvalStatus      String           @default("PENDING") @map("Approval_Status")
  applications        Application[]
  recruiter           CompanyRecruiter @relation(fields: [recruiterId], references: [id])
}

model Application {
  id                String     @id @default(cuid()) @map("Application_ID")
  jobId             String     @map("Job_ID")
  studentId         String     @map("Student_ID")
  applicationStatus String     @default("PENDING") @map("Application_Status")
  job               JobPosting @relation(fields: [jobId], references: [id])
  student           Student    @relation(fields: [studentId], references: [id])
}
